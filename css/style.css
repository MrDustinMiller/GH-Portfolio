
/*
remove default margin/padding
*/
*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
   
}


/*
ceates some padding between the page header and the boxes. adds space to the right after our image and header
*/
.pageHeader 
{
    padding-right: 10%;
}

/*
cuts border of image to be rounded and adds some margin to the image for formatting. adds space to the left of our image.
*/
img 
{
    margin: 9%;
    padding: 2.5%;
    border-radius: 50%;
}

/*
resizes the original image to fit the display better
*/
.resize
{
    width: 300px;
    height: auto;
}

/*
flex property makes content more responsive and be contained together, align-items aligns flex items at the center.
linear gradients give us the double color. the degrees give us the diagnal shape. the percentages determine how much of the color is being shown.
*/
body
{
    text-align: center;
    font-weight: bold;
    font-size: 20px;
    display: flex;
    align-items: center;
    min-height: 100vh;
    background-color: #f87f73;
    background-image: linear-gradient( 2000deg, #f87f73 0%, #f87f73 60%, #00ffd5 40%, #00ffd5 40%);
}

/*
controls the color under our heading
*/
.p1 
{
    color: #444;
}

/*
controls the color of our heading
*/
 h1 
 {
     color: #444;
 }

 /*
align the text to the left in the project box
 */
 ul
 {
     text-align: left;
     
 }

 /*
 once the link has been visited, turn it purple so user knows
 */
a:visited 
{
   color: rgba(154, 3, 192, 0.89);
}
 
 /*
<<<<<<< HEAD
creates a container class to hold the structure and content for the boxes. wraps them on multiple lines instead of one continous line. without this the boxes 
would be whatever background color there is behind it with no formatting.
=======
creates a container class to hold the structure and content for the boxes. without this wrap value the boxes would be on one continous line on the screen and not wrapped on 
multiple.
>>>>>>> 1a31e1148752ccd6c849c4abd536fa1645f0b462
*/
.container
{
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: 700px;
    flex-wrap: wrap;
    padding: 40px 0;
}

/*
<<<<<<< HEAD
create a card class that controls the size/how the cards are layered and spaced out. box shadow properties in order: vertical, horizontal, blur, color.
=======
create a card class that controls the size/how the cards are layered and spaced out. box shadow values in order: vertical, horizontal, blur, color.
>>>>>>> 1a31e1148752ccd6c849c4abd536fa1645f0b462
*/
.container .card
{
    position: relative;
    min-width: 320px;
    height: 420px;
    box-shadow: inset 5px 5px 5px rgba(0, 0, 0, 0.05),
                inset -5px -5px 5px rgba(255,255,255,0.5),
                5px -px 5px rgba(0,0,0,0.5),
                -5px -5px 5px rgba(255,255,255,0.5);
    border-radius: 15px;
    margin: 10px;
}

/*
creates a class that manipulates our cards into boxes. formats/designs the boxes look.
*/
.container .card .box 
{
    position: absolute;
    top: 20px;
    left: 20px;
    right: 20px;
    bottom: 20px;
    background:#808080;
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    border-radius: 15px;
    display: flex;
    justify-content: center;
    align-items: center;

}

/*
creates a mouse hover effect on the boxes.  transform property tells us that the items can be transformed like rotated, moved, skewed. translate allows us moves our boxes 
when hovered over. the (Y) moves the boxes along the y axis. the (-50px) tells the us to make our boxes pop up.
*/
.container .card:hover .box 
{
    transform: translateY(-50px);
    box-shadow: 0 10px 40px rgba(0,0,0,0.2);
}

/*
controls the box heading color when the mouse hovers over the box
*/
.container .card:hover .box .boxHeading h3
{
    color: rgb(0, 0, 0);
}

/*
controls the color of the number on the boxes when a mouse hovers over it
*/
.container .card:hover .box .boxHeading h2
{
    color: rgba(0, 0, 0, 0.123);
}

/*
move the box's header to center
*/
.container .card .box .boxHeading
{
    padding: 20px;
    text-align: center;
}

/*
puts box number in the back of the box behind content. will have no pointer events avaiable. 
*/
.container .card .box .boxHeading h2
{
    position: absolute;
    top: -10px;
    right: 30px;
    font-size: 8em;
    color: rgba(0, 0, 0, 0.05);
    pointer-events: none;
}

/*
controls the box heading color and font size
*/
.container .card .box .boxHeading h3
{
    font-size: 1.8em;
    color: rgb(0, 0, 0);
    z-index: 1;
}

/*
adjusts the texts color/format inside of each box
*/
.container .card .box .boxHeading p
{
   font-size: 1em;
   font-weight: 300;
   color:rgb(255,255,255);
   z-index: 1;
}

.wakaanYT {
    position: absolute;
    top: 100%;
}
